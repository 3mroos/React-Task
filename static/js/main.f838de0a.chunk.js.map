{"version":3,"sources":["components/Layout.js","components/Loader.js","components/Datatable.js","components/search.js","pages/Logger.js","App.js","index.js"],"names":["useStyles","makeStyles","generalLayout","padding","loggerLayout","background","width","Layout","children","classes","className","loader","position","top","left","right","bottom","zIndex","loader_content","transform","Loader","titles","id","title","align","theme","root","table","minWidth","flex","search","tableTitle","spacing","head","paddingBlock","status","fontSize","fontWeight","color","backgroundColor","borderRadius","display","inputFocused","borderColor","boxShadow","tableHeader","cursor","Datatable","data","onSort","React","useState","rrows","useTheme","page","setPage","rowsPerPage","setRowsPerPage","length","Paper","TableContainer","component","elevation","Table","aria-label","TableHead","TableRow","map","TableCell","onClick","e","sortBy","TableBody","slice","row","logId","applicationType","applicationId","actionType","actionDetails","creationTimestamp","TableFooter","TablePagination","rowsPerPageOptions","count","onPageChange","event","newPage","onRowsPerPageChange","target","value","input_txt","border","outline","height","select","Search","onSearch","originalData","setOriginalData","setLogId","setActionType","setApplicationType","dateFrom","setDateFrom","dateTo","setDateTo","setApplicationId","searchQuery","setSearchQuery","reRender","setReRender","useEffect","filtered","filter","val","d1","Date","split","dFrom","dTo","class","type","placeholder","onChange","required","Button","variant","alert","setTimeout","Logger","loading","setLoading","tableLoading","setTableLoading","setData","sortByNums","sortTitle","sort","a","b","tableRefresh","sortByString","fetch","then","res","json","result","auditLog","obj","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f838de0a.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n    generalLayout: {\r\n       padding: 15\r\n    },\r\n    loggerLayout: {\r\n        background: '#f9f9f9',\r\n        width: '100%',\r\n    }\r\n})\r\nexport default function Layout({ children }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.generalLayout}>\r\n            <div className={classes.loggerLayout}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles({\r\n    loader: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        background: 'rgb(255 255 255 / 46%)',\r\n        zIndex: 999,\r\n    },\r\n    loader_content: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n})\r\nexport default function Loader() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.loader}>\r\n            <div className={classes.loader_content}>\r\n                Loading...\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, Paper, useTheme, TableFooter\r\n} from '@material-ui/core';\r\n\r\n\r\n//TODO: titles must return from the parent component as prop, not hard coded\r\nconst titles = [\r\n    { id: 1, title: 'Log ID', align: 'left' },\r\n    { id: 2, title: 'Application Type', align: 'left' },\r\n    { id: 3, title: 'Application ID', align: 'left' },\r\n    { id: 4, title: 'Action', align: 'left' },\r\n    { id: 5, title: 'Action Details', align: 'left' },\r\n    { id: 6, title: 'Date: Time', align: 'left' }\r\n]\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    title: {\r\n        flex: '0 1 70%',\r\n    },\r\n    search: {\r\n        width: '30%'\r\n    },\r\n    tableTitle: {\r\n        padding: theme.spacing(5, 2, 3)\r\n    },\r\n    head: {\r\n        paddingBlock: theme.spacing(3, 1.5),\r\n        width: 200\r\n    },\r\n    status: {\r\n        fontSize: '0.8rem',\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n        backgroundColor: 'gray',\r\n        borderRadius: theme.spacing(0.75),\r\n        padding: theme.spacing(0.75, 1.5),\r\n        display: 'inline-block'\r\n    },\r\n    inputFocused: {\r\n        borderColor: '#80bdff',\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        backgroundColor: \"#00FF00\",\r\n    },\r\n    tableHeader: {\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\n\r\nfunction Datatable({ data, onSort }) {\r\n\r\n    const [rrows, setRRows] = React.useState(data);\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const [original, setOriginal] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleSort = (sortBy) => {\r\n        onSort(sortBy)\r\n    }\r\n\r\n    return (\r\n        rrows.length ? (\r\n            <Paper className={classes.root}>\r\n                <TableContainer component={Paper} elevation={0}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {titles.map(title => (\r\n                                    <TableCell onClick={e => handleSort(title.id)} key={title.id} component=\"th\" align={title.align} className=\"tableHeader\">{title.title}</TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rrows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n                                <TableRow key={row.logId}>\r\n                                    <TableCell>{row.logId}</TableCell>\r\n                                    <TableCell>{row.applicationType}</TableCell>\r\n                                    <TableCell>{row.applicationId}</TableCell>\r\n                                    <TableCell>{row.actionType}</TableCell>\r\n                                    <TableCell>{row.actionDetails}</TableCell>\r\n                                    <TableCell>{row.creationTimestamp}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n\r\n                        </TableBody>\r\n                        <TableFooter>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 15]}\r\n                                // component=\"div\"\r\n                                count={rrows.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            />\r\n                        </TableFooter>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        ) : null\r\n\r\n    )\r\n}\r\n\r\nexport default Datatable;\r\n","import { Button, makeStyles, Grid } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    input_txt: {\r\n        width: '100%',\r\n        border: 'solid 1px #d9dcde',\r\n        borderRadius: 4,\r\n        padding: 5,\r\n        outline: 'none',\r\n        height: 20,\r\n    },\r\n    select: {\r\n        width: '100%',\r\n        border: 'solid 1px #d9dcde',\r\n        borderRadius: 4,\r\n        padding: 5,\r\n        outline: 'none',\r\n        height: 30,\r\n    },\r\n})\r\n\r\nexport default function Search({ data, onSearch }) {\r\n    const [originalData, setOriginalData] = useState('');\r\n    if (data) {\r\n        if (!originalData) setOriginalData(data);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const [logId, setLogId] = useState('');\r\n    const [actionType, setActionType] = useState('');\r\n    const [applicationType, setApplicationType] = useState('');\r\n    const [dateFrom, setDateFrom] = useState('');\r\n    const [dateTo, setDateTo] = useState('');\r\n    const [applicationId, setApplicationId] = useState('');\r\n\r\n\r\n    const [searchQuery, setSearchQuery] = useState();\r\n\r\n    const [reRender, setReRender] = useState(true);\r\n\r\n\r\n\r\n    const handleSearch = () => {\r\n        let searchQuery = {\r\n            logId,\r\n            actionType,\r\n            applicationType,\r\n            dateFrom,\r\n            dateTo,\r\n            applicationId\r\n        }\r\n\r\n        //TODO: requiered fields must be handle in a nicer way than alerts\r\n        if ((searchQuery.dateFrom && !searchQuery.dateTo) || !searchQuery.dateFrom && searchQuery.dateTo) {\r\n            alert('Please enter the Date from and Date to fields')\r\n            return\r\n        }\r\n\r\n        //TODO: searchQuery must be passed as props\r\n        if (!searchQuery.logId && !searchQuery.actionType && !searchQuery.applicationId && !searchQuery.applicationType && !searchQuery.dateFrom && !searchQuery.dateTo) {\r\n            searchQuery = null;\r\n            onSearch(originalData);\r\n            return;\r\n        }\r\n        setSearchQuery(searchQuery);\r\n    }\r\n    const clearSearch = () => {\r\n        setLogId('');\r\n        setActionType('');\r\n        setApplicationType('');\r\n        setDateFrom('');\r\n        setDateTo('');\r\n        setApplicationId('');\r\n        onSearch(originalData);\r\n        setReRender(false);\r\n        setTimeout(() => {\r\n            setReRender(true);\r\n        }, 10);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        //TODO: searchQuery must be passed as props\r\n        if (searchQuery) {\r\n            let filtered = originalData;\r\n\r\n            if (searchQuery.logId) {\r\n                filtered = filtered.filter(val => {\r\n                    if (val.logId == searchQuery.logId) {\r\n                        return val\r\n                    }\r\n                })\r\n            }\r\n            if (searchQuery.actionType) {\r\n                filtered = filtered.filter(val => {\r\n                    if (val.actionType == searchQuery.actionType) {\r\n                        return val\r\n                    }\r\n                })\r\n            }\r\n            if (searchQuery.applicationId) {\r\n                filtered = filtered.filter(val => {\r\n                    if (val.applicationId == searchQuery.applicationId) {\r\n                        return val\r\n                    }\r\n                })\r\n            }\r\n            if (searchQuery.applicationType) {\r\n                filtered = filtered.filter(val => {\r\n                    if (val.applicationType == searchQuery.applicationType) {\r\n                        return val\r\n                    }\r\n                })\r\n            }\r\n            if (searchQuery.dateFrom) {\r\n                filtered = filtered.filter(val => {\r\n                    let d1 = new Date(val.creationTimestamp.split(' ')[0]);\r\n                    let dFrom = new Date(searchQuery.dateFrom)\r\n                    let dTo = new Date(searchQuery.dateTo)\r\n                    if (d1 >= dFrom && d1 <= dTo) {\r\n                        return val\r\n                    }\r\n                })\r\n            }\r\n            onSearch(filtered)\r\n        } else {\r\n            // if (original.length) {\r\n            //     setRRows(original)\r\n            // }\r\n        }\r\n    }, [searchQuery])\r\n\r\n\r\n    if (reRender) {\r\n        return (\r\n            <div class=\"grid mb-20\">\r\n                <label class=\"gridItem\">\r\n                    Employee Name\r\n                    <input type=\"text\" className={classes.input_txt} placeholder=\"e.g. Admin User\" onChange={e => setLogId(e.target.value)} />\r\n                </label>\r\n                <label class=\"gridItem\">\r\n                    Action Type\r\n                    <select className={[classes.select]} onChange={e => setActionType(e.target.value)}>\r\n                        <option value=\"\">Select one</option>\r\n                        <option value=\"DARI_REFRESH_TOKEN\">DARI REFRESH TOKEN</option>\r\n                        <option value=\"DARI_APP_LOGIN\">DARI APP LOGIN</option>\r\n                        <option value=\"INITIATE_APPLICATION\">INITIATE APPLICATION</option>\r\n                        <option value=\"SUBMIT_APPLICATION\">SUBMIT APPLICATION</option>\r\n                        <option value=\"ADD_EMPLOYEE\">ADD EMPLOYEE</option>\r\n                    </select>\r\n                </label>\r\n                <label class=\"gridItem\">\r\n                    Application Type\r\n                    <select className={[classes.select]} onChange={e => setApplicationType(e.target.value)}>\r\n                        <option value=\"\">Select one</option>\r\n                        <option value=\"CERT_TITLE_DEED_PLOT\">CERT TITLE DEED PLOT</option>\r\n                        <option value=\"LEASE_REGISTRATION\">LEASE REGISTRATION</option>\r\n                        <option value=\"ADD_POA\">ADD POA</option>\r\n                        <option value=\"ADD_COMPANY\">ADD COMPANY</option>\r\n                        <option value=\"ADD_COMPANY_EMPLOYEE\">ADD COMPANY EMPLOYEE</option>\r\n                        <option value=\"CERT_PROP_OWNERSHIP\">CERT PROP OWNERSHIP</option>\r\n                        <option value=\"LEASE_CLOSURE\">LEASE CLOSURE</option>\r\n                    </select>\r\n                </label>\r\n                <label class=\"gridItem\">\r\n                    From Date\r\n                    <input type=\"date\" className={[classes.input_txt]} onChange={e => setDateFrom(e.target.value)} />\r\n                </label>\r\n                <label class=\"gridItem\">\r\n                    To Date\r\n                    <input type=\"date\" required={dateFrom ? true : false} className={[classes.input_txt]} onChange={e => setDateTo(e.target.value)} />\r\n                </label>\r\n                <label class=\"gridItem\">\r\n                    Application ID\r\n                    <input type=\"text\" className={classes.input_txt} placeholder=\"e.g. 21984/2021\" onChange={e => setApplicationId(e.target.value)} />\r\n                </label>\r\n                <div class=\"gridItem\">\r\n                    <Button color=\"primary\" variant='contained' onClick={handleSearch}>Search</Button>\r\n                </div>\r\n                <div class=\"gridItem\">\r\n                    <Button color=\"danger\" variant='contained' onClick={clearSearch}>Clear</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else return (<div></div>)\r\n}","import { TextField, FormControl, Select, MenuItem, InputLabel, makeStyles } from '@material-ui/core'\r\nimport { React, useEffect, useState } from 'react'\r\nimport Loader from '../components/Loader'\r\nimport Datatable from '../components/Datatable'\r\nimport Search from '../components/search'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  input_txt: {\r\n    width: '100%',\r\n    border: 'solid 1px #d9dcde',\r\n    borderRadius: 4,\r\n    padding: 5,\r\n    outline: 'none',\r\n    height: 20,\r\n  },\r\n  select: {\r\n    width: '100%',\r\n    border: 'solid 1px #d9dcde',\r\n    borderRadius: 4,\r\n    padding: 5,\r\n    outline: 'none',\r\n    height: 30,\r\n  }\r\n})\r\n\r\nexport default function Logger() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [tableLoading, setTableLoading] = useState(true);\r\n\r\n  const [data, setData] = useState(null);\r\n\r\n  const onSearch = (obj) => {\r\n    setData(obj);\r\n    tableRefresh();\r\n  }\r\n\r\n //TODO: Reverse sort methods must be introduced\r\n //TODO: sort parameters must passed as props not hard coded\r\n  const onSort = (sortBy) => {\r\n    if (sortBy == 1) {\r\n      sortByNums('logId');\r\n    }\r\n    if (sortBy == 3) {\r\n      sortByNums('applicationId');\r\n    }\r\n    if (sortBy == 2) {\r\n      sortByString('applicationType');\r\n    }\r\n    if (sortBy == 4) {\r\n      sortByString('actionType');\r\n    }\r\n    if (sortBy == 6) {\r\n      sortByString('creationTimestamp');\r\n    }\r\n  }\r\n\r\n  const sortByNums = (sortTitle) => {\r\n    data.sort((a, b) => {\r\n      return a[sortTitle] - b[sortTitle];\r\n    });\r\n    tableRefresh();\r\n  }\r\n\r\n  const sortByString = (sortTitle) => {\r\n    data.sort((a, b) => {\r\n      if (a[sortTitle] < b[sortTitle]) {\r\n        return -1;\r\n      }\r\n      if (a[sortTitle] > b[sortTitle]) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    tableRefresh();\r\n  }\r\n  const sortByDate = (sortTitle) => {\r\n    data.sort((a, b) => {\r\n      let da = new Date(a[sortTitle]),\r\n        db = new Date(b[sortTitle]);\r\n      return da - db;\r\n    });\r\n    tableRefresh();\r\n  }\r\n\r\n  const tableRefresh = () => {\r\n    setTableLoading(true);\r\n    setTimeout(() => {\r\n      setTableLoading(false);\r\n    }, 100);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch('https://run.mocky.io/v3/a2fbc23e-069e-4ba5-954c-cd910986f40f')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setLoading(false);\r\n        setData(data.result.auditLog)\r\n        setTableLoading(false);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        loading ? <Loader></Loader> : null\r\n      }\r\n      {data ? (<Search data={data} onSearch={onSearch}></Search>) : null}\r\n      {!tableLoading ? (<Datatable data={data} onSort={onSort}></Datatable>) : null}\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Layout from './components/Layout';\r\nimport Logger from './pages/Logger'\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n      <Layout>\r\n        \r\n            <Logger />\r\n         \r\n      </Layout>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}